Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
Spark context Web UI available at http://azcedledgev001.v01caedl.manulife.com:4040
Spark context available as 'sc' (master = local[*], app id = local-1590341131243).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.3.0.2.6.5.149-2
      /_/
         
Using Scala version 2.11.8 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_241)
Type in expressions to have them evaluated.
Type :help for more information.

scala> val t_process_date = "2020-05-17"
t_process_date: String = 2020-05-17

scala> val s_process_date = "2020-05-01"
s_process_date: String = 2020-05-01

scala> :load '02_ComparisonScripts_gngnco.spark' 
Loading 02_ComparisonScripts_gngnco.spark...
r1: org.apache.spark.sql.DataFrame = [addr: string, city: string ... 27 more fields]
r2: org.apache.spark.sql.DataFrame = [addr: string, city: string ... 27 more fields]
diff: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [addr: string, city: string ... 27 more fields]
20/05/24 13:25:44 WARN Utils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.debug.maxToStringFields' in SparkEnv.conf.
[Stage 0:>                 (0 + 8) / 19][Stage 1:>                  (0 + 0) / 2][Stage 0:>                (1 + 15) / 19][Stage 1:>                  (0 + 0) / 2][Stage 0:===============> (17 + 2) / 19][Stage 1:>                  (0 + 2) / 2][Stage 2:>                                                        (0 + 8) / 200][Stage 2:==>                                                      (8 + 8) / 200][Stage 2:=====>                                                  (19 + 8) / 200][Stage 2:========>                                               (30 + 8) / 200][Stage 2:===========>                                            (40 + 8) / 200][Stage 2:==============>                                         (51 + 8) / 200][Stage 2:==================>                                     (67 + 8) / 200][Stage 2:======================>                                 (81 + 8) / 200][Stage 2:==========================>                             (95 + 8) / 200][Stage 2:=============================>                         (107 + 8) / 200][Stage 2:=================================>                     (120 + 8) / 200][Stage 2:====================================>                  (132 + 8) / 200][Stage 2:=========================================>             (150 + 8) / 200][Stage 2:=============================================>         (164 + 8) / 200][Stage 2:=================================================>     (180 + 8) / 200][Stage 2:=====================================================> (195 + 5) / 200][Stage 3:=================================>                     (121 + 8) / 200][Stage 3:==============================================>        (168 + 8) / 200]                                                                                Count with mismatches = 0
[Stage 7:===========>                                            (41 + 8) / 200][Stage 7:================>                                       (58 + 8) / 200][Stage 7:=====================>                                  (77 + 8) / 200][Stage 7:==========================>                             (94 + 8) / 200][Stage 7:===============================>                       (113 + 8) / 200][Stage 7:=====================================>                 (136 + 8) / 200][Stage 7:===========================================>           (159 + 8) / 200][Stage 7:==================================================>    (183 + 8) / 200][Stage 8:====================================================>  (192 + 8) / 200]                                                                                res1: Long = 0
[Stage 12:===============>                                       (55 + 8) / 200][Stage 12:====================>                                  (76 + 8) / 200][Stage 12:==========================>                            (98 + 8) / 200][Stage 12:================================>                     (122 + 8) / 200][Stage 12:=====================================>                (138 + 8) / 200][Stage 12:==========================================>           (159 + 8) / 200][Stage 12:================================================>     (178 + 8) / 200]                                                                                +----+----+---+---+----+----+-------+--------+-------+---------+---------+---------+-------+-------+------+------+---------+----------+-------+-------+-----------+----------+-----------+--------+-------+---------+--------+-----+-----------+
|addr|city|pc |ph |prov|name|company|last_usr|last_dt|last_time|fscl_yrnd|rtnd_earn|fst_bal|lst_bal|fst_pl|lst_pl|crnt_fscl|short_name|gst_ref|db_name|cr_rpts_cur|post_delay|primary_mkt|consoldt|stmt_on|fund_type|language|addr2|broker_code|
+----+----+---+---+----+----+-------+--------+-------+---------+---------+---------+-------+-------+------+------+---------+----------+-------+-------+-----------+----------+-----------+--------+-------+---------+--------+-----+-----------+
+----+----+---+---+----+----+-------+--------+-------+---------+---------+---------+-------+-------+------+------+---------+----------+-------+-------+-----------+----------+-----------+--------+-------+---------+--------+-----+-----------+


scala> 

scala> :quit

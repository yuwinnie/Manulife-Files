Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
Spark context Web UI available at http://azcedledgev001.v01caedl.manulife.com:4040
Spark context available as 'sc' (master = local[*], app id = local-1590341994656).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.3.0.2.6.5.149-2
      /_/
         
Using Scala version 2.11.8 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_241)
Type in expressions to have them evaluated.
Type :help for more information.

scala> val t_process_date = "2020-05-17"
t_process_date: String = 2020-05-17

scala> val s_process_date = "2020-05-01"
s_process_date: String = 2020-05-01

scala> :load '10_ComparisonScripts_mfclcl.spark' 
Loading 10_ComparisonScripts_mfclcl.spark...
r1: org.apache.spark.sql.DataFrame = [class: string, descr: string ... 10 more fields]
r2: org.apache.spark.sql.DataFrame = [class: string, descr: string ... 10 more fields]
diff: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [class: string, descr: string ... 10 more fields]
[Stage 0:>                 (0 + 8) / 10][Stage 1:>                  (0 + 0) / 1][Stage 0:=========>        (5 + 5) / 10][Stage 1:>                  (0 + 1) / 1][Stage 0:================> (9 + 1) / 10][Stage 1:>                  (0 + 1) / 1][Stage 2:>                                                        (0 + 8) / 200][Stage 2:===>                                                    (11 + 9) / 200][Stage 2:=======>                                                (27 + 8) / 200][Stage 2:=============>                                          (49 + 8) / 200][Stage 2:===================>                                    (70 + 8) / 200][Stage 2:=======================>                                (84 + 8) / 200][Stage 2:=============================>                         (106 + 9) / 200][Stage 2:=================================>                     (123 + 8) / 200][Stage 2:=====================================>                 (137 + 8) / 200][Stage 2:==========================================>            (156 + 8) / 200][Stage 2:===============================================>       (171 + 8) / 200][Stage 2:==================================================>    (183 + 8) / 200][Stage 2:======================================================>(198 + 2) / 200][Stage 3:===========>                                            (40 + 9) / 200][Stage 3:=================>                                      (62 + 8) / 200][Stage 3:========================>                               (87 + 8) / 200][Stage 3:===============================>                       (114 + 8) / 200][Stage 3:======================================>                (141 + 8) / 200][Stage 3:============================================>          (163 + 8) / 200][Stage 3:==================================================>    (182 + 9) / 200][Stage 4:>                                                          (0 + 1) / 1]                                                                                Count with mismatches = 0
[Stage 7:========================>                               (89 + 8) / 200][Stage 7:===============================>                       (115 + 8) / 200][Stage 7:=====================================>                 (135 + 8) / 200][Stage 7:=========================================>             (152 + 8) / 200][Stage 7:================================================>      (175 + 8) / 200][Stage 7:====================================================>  (192 + 8) / 200][Stage 8:==============>                                         (52 + 8) / 200][Stage 8:======================>                                 (82 + 8) / 200][Stage 8:===================================>                   (129 + 8) / 200][Stage 8:==================================================>    (185 + 8) / 200]                                                                                res1: Long = 0
[Stage 12:================>                                      (61 + 8) / 200][Stage 12:=========================>                             (92 + 8) / 200][Stage 12:===================================>                  (130 + 8) / 200][Stage 12:=======================================>              (147 + 8) / 200][Stage 12:==============================================>       (174 + 8) / 200]                                                                                +-----+-----+-------+-------+---------+--------+----------+-------+--------+--------+----------+-----------+
|class|descr|cl_type|last_dt|last_time|last_usr|table_type|rpt_typ|seg_proc|reg_type|recip_type|broker_code|
+-----+-----+-------+-------+---------+--------+----------+-------+--------+--------+----------+-----------+
+-----+-----+-------+-------+---------+--------+----------+-------+--------+--------+----------+-----------+


scala> 

scala> :quit
